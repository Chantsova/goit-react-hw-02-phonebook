{"version":3,"sources":["components/Form/Form.jsx","components/Contacts/Contacts.jsx","App.js","index.js"],"names":["Form","state","name","number","id","nameInputId","uuidv4","numberInputId","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","Component","Contacts","contacts","onDeleteContact","map","onClick","App","deleteContacts","contactId","prevState","filter","contact","formSubmitHandler","data","console","log","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"8QAkEeA,E,4MA7DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,GACRC,GAAI,I,EAGNC,YAAcC,c,EACdC,cAAgBD,c,EAEhBE,aAAe,SAAAC,GAAU,IAAD,EACtB,EAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,UAAL,mBACGV,EAAOS,GADV,mBAEML,eAFN,K,EAMFO,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMa,SAAUE,KAAKL,aAArB,UACE,wBAAOM,QAASD,KAAKb,YAArB,UACE,sCACA,uBACEe,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRZ,MAAOO,KAAKjB,MAAMC,KAClBsB,SAAUN,KAAKV,kBAGnB,wBAAOW,QAASD,KAAKX,cAArB,UACE,wCACA,uBACEa,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRZ,MAAOO,KAAKjB,MAAME,OAClBqB,SAAUN,KAAKV,kBAInB,wBAAQY,KAAK,SAAb,gC,GAxDWK,aCUJC,EAZE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OACf,6BACGD,EAASE,KAAI,gBAAG3B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACZ,+BACE,4BAAIF,IACJ,4BAAIC,IACJ,wBAAQ2B,QAAS,kBAAMF,EAAgBxB,IAAvC,sBAHOA,SC4BA2B,E,4MA5Bb9B,MAAQ,CACN0B,SAAU,GACVzB,KAAM,I,EAGR8B,eAAiB,SAAAC,GACf,EAAKrB,UAAS,SAAAsB,GAAS,MAAK,CAC1BP,SAAUO,EAAUP,SAASQ,QAAO,SAAAC,GAAO,OAAIA,EAAQhC,KAAO6B,U,EAIlEI,kBAAoB,SAAAC,GAClBC,QAAQC,IAAIF,GACZ,EAAK1B,SAAS,CAAEe,SAAU,CAACW,M,4CAG7B,WACE,IAAQX,EAAaT,KAAKjB,MAAlB0B,SAER,OACE,qCACE,cAAC,EAAD,CAAMX,SAAUE,KAAKmB,oBACrB,cAAC,EAAD,CAAUV,SAAUA,EAAUC,gBAAiBV,KAAKc,wB,GAvB1CP,aCClBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,W","file":"static/js/main.28b618f1.chunk.js","sourcesContent":["import './Form.css';\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n    id: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n      id: uuidv4(),\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          <h2>Name</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          <h2>Number</h2>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nconst Contacts = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id}>\n        <p>{name}</p>\n        <p>{number}</p>\n        <button onClick={() => onDeleteContact(id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n    this.setState({ contacts: [data] });\n  };\n\n  render() {\n    const { contacts } = this.state;\n\n    return (\n      <>\n        <Form onSubmit={this.formSubmitHandler} />\n        <Contacts contacts={contacts} onDeleteContact={this.deleteContacts} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}